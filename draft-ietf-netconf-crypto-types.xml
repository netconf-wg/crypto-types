<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<!-- <?rfc-ext allow-markup-in-artwork="yes" ?> what does this do? -->
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->
<!--<rfc xmlns:xiax="https://watsen.net/xiax" category="std" ipr="trust200902" docName="draft-ietf-netconf-crypto-types-latest">-->
<rfc category="std" ipr="trust200902" docName="draft-ietf-netconf-crypto-types-latest">
    <front>
        <title>Common YANG Data Types for Cryptography</title>
        <author initials="K.W." surname="Watsen" fullname="Kent Watsen">
            <organization>Watsen Networks</organization>
            <address>
                <email>kent+ietf@watsen.net</email>
            </address>
        </author>
        <author initials="H.W." surname="Wang" fullname="Wang Haiguang">
            <organization>Huawei</organization>
            <address>
                <email>wang.haiguang.shieldlab@huawei.com</email>
            </address>
        </author>
        <date/>
        <area>Operations</area>
        <workgroup>NETCONF Working Group</workgroup>
        <abstract>
          <t>This document primarily defines a YANG module for identities,
            typedefs, groupings, and RPCs useful to cryptographic applications.
            This draft additionally defines a new IANA registry for
            cryptographic primitives, modifies existing SSH and TLS registries,
            and defines a process enabling IANA to automatically generate three
            new YANG modules from the new cryptographic primitives registry.</t>
        </abstract>
        <note title="Editorial Note (To be removed by RFC Editor)">
          <t>This draft contains many placeholder values that need to be replaced
          with finalized values at the time of publication.  This note summarizes
          all of the substitutions that are needed.  No other RFC Editor 
          instructions are specified elsewhere in this document.</t>

          <t>Artwork in this document contains shorthand references to drafts in 
          progress.  Please apply the following replacements:
            <list style="symbols">
              <t><spanx style="verb">AAAA</spanx> --&gt; the assigned RFC value for this draft</t>
            </list>
          </t>
          <t>Artwork in this document contains placeholder values for the date
          of publication of this draft.  Please apply the following replacement:
            <list style="symbols">
              <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
            </list>
          </t>
          <t>The following Appendix section is to be removed prior to publication:
            <list style="symbols">
              <t>Appendix B.  Change Log</t>
            </list>
          </t>
        </note>
    </front>
    <middle>
      <section title="Introduction">
        <t>This document primarily defines a YANG 1.1 <xref target="RFC7950"/> 
          module for identities, typedefs, groupings, and RPCs useful to
          cryptographic applications.</t>
        <t>This draft additionally defines a new IANA registry called
          "Cryptographic Primitives", and defines a process enabling IANA
          to  automatically generate three new YANG modules ("iana-hash-algs",
          "iana-symmetric-key-algs", and "iana-asymmetric-key-algs") from the
          new cryptographic primitives registry.</t>
        <t>Lastly, the draft also modifies existing SSH and TLS registries,
          adding a new column called "Primitives" to specific sub-registries
          identifying which primitives are used by that registration.</t>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
          when, and only when, they appear in all capitals, as shown here.</t>
      </section>

      <section title="The Crypto Types Module">
        <section title="Tree Diagram">
          <t>This section provides a tree diagram <xref target="RFC8340"/> for
          the "ietf-crypto-types" module.  Only "grouping" statements are represented,
          as tree diagrams have no means to represent identities or typedefs.</t>
          <t>
            <figure>
             <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-crypto-types-tree.txt)
]]></artwork>
            </figure>
          </t>
        </section>
        <section title="YANG Module" anchor="crypto-types-yang-module">
          <t>This module has normative references to <xref target="RFC2119"/>,
          <xref target="RFC2986"/>, <xref target="RFC3447"/>, <xref target="RFC4253"/>,
          <xref target="RFC5280"/>, <xref target="RFC5652"/>, <xref target="RFC5915"/>,
          <xref target="RFC5958"/>, <xref target="RFC6031"/>, <xref target="RFC6125"/>,
          <xref target="RFC6991"/>, <xref target="RFC8174"/>, <xref target="RFC8341"/>,
          and <xref target="ITU.X690.2015"/>.</t>
          <t>
            <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-crypto-types@YYYY-MM-DD.yang"</preamble>
             <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-crypto-types@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>
        <section title="Examples" anchor="crypto-types-examples">
          <section title="The &quot;asymmetric-key-pair-with-certs-grouping&quot; Grouping" toc="exclude">
            <t>The following example module illustrates the use of both the "symmetric-key-grouping"
              and the "asymmetric-key-pair-with-certs-grouping" groupings defined in the
              "ietf-crypto-types" module.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ex-crypto-types-usage@YYYY-MM-DD.yang)
]]></artwork>
              </figure>
            </t>
  
            <t>Given the above example usage module, the following example
            illustrates some configured keys.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-crypto-types-usage.xml)
]]></artwork>
              </figure>
            </t>
          </section>
  
          <section title="The &quot;generate-symmetric-key&quot; RPC" toc="exclude">
            <t>The following example illustrates the "generate-symmetric-key"
            RPC with the NETCONF protocol.</t>
            <t>
              <figure>
                <preamble>REQUEST</preamble>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-symmetric-key-rpc.xml)
]]></artwork>
              </figure>
              <figure>
                <preamble>RESPONSE</preamble>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-symmetric-key-rpc-reply.xml)
]]></artwork>
              </figure>
            </t>
          </section>
  
          <section title="The &quot;generate-asymmetric-key&quot; RPC" toc="exclude">
            <t>The following example illustrates the "generate-asymmetric-key"
            RPC with the NETCONF protocol.</t>
            <t>
              <figure>
                <preamble>REQUEST</preamble>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-asymmetric-key-rpc.xml)
]]></artwork>
              </figure>
              <figure>
                <preamble>RESPONSE</preamble>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-asymmetric-key-rpc-reply.xml)
]]></artwork>
              </figure>
            </t>
          </section>

          <section title="The &quot;generate-certificate-signing-request&quot; Action" toc="exclude">
            <t>The following example illustrates the "generate-certificate-signing-request"
            action with the NETCONF protocol.</t>
            <t>
              <figure>
                <preamble>REQUEST</preamble>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-crypto-types-gcsr-rpc.xml)
]]></artwork>
              </figure>
              <figure>
                <preamble>RESPONSE</preamble>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-crypto-types-gcsr-rpc-reply.xml)
]]></artwork>
              </figure>
            </t>
          </section>
  
          <section title="The &quot;certificate-expiration&quot; Notification" toc="exclude">
            <t>The following example illustrates the "certificate-expiration"
            notification with the NETCONF protocol.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-crypto-types-ce-notification.xml)
]]></artwork>
              </figure>
            </t>
          </section>
        </section>
      </section>

      <section title="Security Considerations">
        <!--
        <section title="Support for Algorithms">
          <t>In order to use YANG identities for algorithm identifiers, only
          the most commonly used RSA key lengths are supported for the RSA
          algorithm.  Additional key lengths can be defined in another module
          or added into a future version of this document.</t>
  
          <t>This document limits the number of elliptical curves supported.
          This was done to match industry trends and IETF best practice (e.g.,
          matching work being done in TLS 1.3).  If additional algorithms are
          needed, they can be defined by another module or added into a future
          version of this document.</t>
        </section>
        -->
        <section title="No Support for CRMF">
          <t>This document uses PKCS #10 <xref target="RFC2986"/> for the
          "generate-certificate-signing-request" action.  The use of Certificate
          Request Message Format (CRMF) <xref target="RFC4211"/> was considered,
          but is was unclear if there was market demand for it.  If it is desired 
          to support CRMF in the future, a backwards compatible solution can be
          defined at that time.</t>
        </section>
        <section title="Access to Data Nodes">
          <t>The YANG module in this document defines "grouping" statements
            that are designed to be accessed via YANG based management
            protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
            <xref target="RFC8040"/>. Both of these protocols have
            mandatory-to-implement secure transport layers (e.g., SSH, TLS)
            with mutual authentication.</t>

          <t>The NETCONF access control model (NACM) <xref target="RFC8341"/>
            provides the means to restrict access for particular users to a
            pre-configured subset of all available protocol operations and
            content.</t>

          <t>Since the module in this document only define groupings,
            these considerations are primarily for the designers of other
            modules that use these groupings.</t>

          <t>There are a number of data nodes defined by the grouping
            statements that are writable/creatable/deletable (i.e., config
            true, which is the default).  Some of these data nodes may be
            considered sensitive or vulnerable in some network environments.
            Write operations (e.g., edit-config) to these data nodes
            without proper protection can have a negative effect on
            network operations.  These are the subtrees and data nodes
            and their sensitivity/vulnerability:
            <list hangIndent="6" style="hanging">
              <t hangText="   *:">All of the data nodes defined by 
                all the groupings are considered sensitive to write
                operations.  For instance, the modification of a
                public key or a certificate can dramatically alter
                the implemented security policy.  For this reason,
                the NACM extension "default-deny-write" has been
                applied to all the data nodes defined by all the
                groupings.</t>
            </list>
          </t>

          <t>Some of the readable data nodes in the YANG module may
            be considered sensitive or vulnerable in some network
            environments. It is thus important to control read access
            (e.g., via get, get-config, or notification) to these
            data nodes. These are the subtrees and data nodes and
            their sensitivity/vulnerability: 
            <list hangIndent="6" style="hanging">
              <t hangText="   /private-key:">The "private-key" node
                defined in the "asymmetric-key-pair-grouping" grouping
                is additionally sensitive to read operations such that,
                in normal use cases, it should never be returned to a
                client.  For this reason, the NACM extension
                "default-deny-all" has been applied to it here.</t>
            </list>
          </t>

          <t>Some of the operations in this YANG module may be considered
            sensitive or vulnerable in some network environments. It is
            thus important to control access to these operations. These
            are the operations and their sensitivity/vulnerability:
            <list style="hanging" hangIndent="6">
              <t hangText="   *:">All of the "action" statements defined by
                groupings SHOULD only be executed by authorized users.  For
                this reason, the NACM extension "default-deny-all" has been
                applied to all of them.  Note that NACM uses "default-deny-all"
                to protect "RPC" and "action" statements; it does not define,
                e.g., an extension called "default-deny-execute".</t>
              <t hangText="   generate-certificate-signing-request:">For
                this action, it is RECOMMENDED that implementations assert
                channel binding <xref target="RFC5056"/>, so as to ensure
                that the application layer that sent the request is the same
                as the device authenticated when the secure transport layer
                was established.</t>
              <t hangText="   generate-symmetric-key:">FIXME</t>
              <t hangText="   generate-asymmetric-key:">FIXME</t>
            </list>
          </t>
        </section>
      </section>

      <section title="IANA Considerations">
        <section title='Create the "Cryptographic Primitives" Registry' anchor="iana-prims">
          <t>This section defines a new registry called "Cryptographic Primitives",
            following the guidelines described in Section 4 of <xref target="RFC5226"/>.</t>
          <t>This registery enumerates various primitive algorithms that are used
            by various cryptographic ciphers and protocols.</t>
          <t>The following note shall be at the top of the registry:
            <list style="empty">
              <t>This registry enumerates cryptographic primitives that are or
                have been used by various cryptographic ciphers and protocols.
              </t>
            </list>
          </t>
          <section title='Introduction' anchor='prim-alg-reg-intro'>
            <t>The Cryptographic Primitives registry is composed of a number of
              sub-registries, one for each kind of primitive algorithm.</t>
            <t>Each sub-registry has the same number of fields and update policy.</t>
            <t>The fields for each sub-registry are:
              <list style="symbols">
                <t>Name
                  <list style="symbols">
                    <t>The name of the algorithm (required).</t>
                    <t>The name must be the common "enumerated" value for the algorithm.</t>
                    <t>The name must be unique within the sub-registry.</t>
                    <t>The name must be a single word composed of one or more ASCII characters.</t>
                    <t>Each character must be either an uppercase or lowercase letter, a digit,
                      a hyphen, or an underscore.</t>
                    <t>While not bounded, the name is expected to be relatively
                      short; unlikely ever exceeding a couple dozen characters.</t>
                  </list>
                </t>
                <!--
                <t>Title
                  <list style="symbols">
                    <t>A human-readable title for the algorithm (optional).</t>
                    <t>The discription may be used to provide the common name
                      and/or alternate names for the algorithm.</t>
                    <t>The title, when present, is expected to be no more
                      than one sentence.</t>
                    <t>The title is expected to be in English, but may contain
                      UTF-8 characters as may be needed in some cases.</t>
                  </list>
                </t>
                -->
                <t>Description
                  <list style="symbols">
                    <t>An arbitrary description of the algorithm (optional).</t>
                    <t>The discription may be used to provide a human-facing name
                      and/or alternate names for the algorithm.</t>
                    <t>The description, when present, is expected to be no more
                      than a few sentences.</t>
                    <t>The description is to be in English, but may contain UTF-8
                      characters as may be needed in some cases.</t>
                  </list>
                </t>
                <t>Status
                  <list style="symbols">
                    <t>An enumerated value stating the current status of the algorithm (optional).</t>
                    <t>The value, when present, must be "Recommended", "Deprecated" or "Obsolete".</t>
                    <t>An algorithm having no "status" specified (i.e., not marked as "Recommended")
                      does not necessarily mean that it is flawed; rather, it indicates that the
                      item either has not been through the IETF consensus process, has limited
                      applicability, or is intended only for specific use cases.</t>
                    <t>When requesting a registration for an algorithm having no status, the
                      request should use an empty string value (i.e., "Status: ") to clearly
                      indicate no status, as opposed to the value having been forgotten.</t>
                  </list>
                </t>
                <t>References
                  <list style="symbols">
                    <t>One or more normative references for the algorithm (required).</t>
                    <t>Each reference must declare its "type" as as either "text" or "rfc"
                      and, if "rfc", must also declare an "data" value containing the
                      RFC's number in the form "rfcxxxx" (or "rfcxxxxx").  In either
                      case, the xref's content must contain a suitable textual citation,
                      e.g., containing both a tracking number (e.g., RFC 2119) as well
                      the document's title (e.g., Key words for use in RFCs to Indicate
                      Requirement Levels).  Rendering software (e.g., stylesheets) may
                      choose to present the reference in any suitable manner.</t>
                    <t>There must be at least one reference to a document that defines
                      the algorithm.</t>
                    <t>There must be a reference to the document that originated the
                      algorithm's registration.</t>
                    <t>The document that defines the algorithm and the document that
                      defines originated the registration may be the same.</t>
                    <t>While not bounded, the total number of references is unlikely
                      to ever exceed a few.</t>
                  </list>
                </t>
              </list>
            </t>
            <t>The update policy is either "RFC Required" or "IETF Review", and maybe
              also "IESG Approval".  In any case, it is always requires an "Expert
              Review" (a.k.a. "Designated Expert).</t>
            <t>Whenever a sub-registry is updated, IANA must automatically update and
              re-published the corresponding YANG module, as described in
              <xref target="iana-modules">IANA-maintained YANG Modules</xref>.</t>
          </section>
          <section title='The "Symmetric Key Algorithms" Sub-Registry' anchor='iana-sym-reg'>
            <t>The "Symmetric Key Algorithms" sub-registry enumerates symmetric key
              algorithms used by cryptographic ciphers and protocols.</t>
            <t>The format of this registry is described in the
              <xref target="prim-alg-reg-intro">Introduction</xref> section above.</t>
            <t>Following is the initial assignment for this sub-registry:
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(init-symmetric-key-algs.txt)
]]></artwork>
              </figure>
            </t>
          </section>
          <section title='The "Asymmetric Key Algorithms" Sub-Registry' anchor='iana-asym-reg'>
            <t>The "Asymmetric Key Algorithms" sub-registry enumerates asymmetric key
              algorithms used by cryptographic ciphers and protocols.</t>
            <t>The format of this registry is described in the
              <xref target="prim-alg-reg-intro">Introduction</xref> section above.</t>
            <t>Following is the initial assignment for this sub-registry:
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(init-asymmetric-key-algs.txt)
]]></artwork>
              </figure>
            </t>
          </section>
          <section title='The "Hash Algorithms" Sub-Registry' anchor='iana-hash-reg'>
            <t>The "Hash Algorithms" sub-registry enumerates hashing algorithms used
              by cryptographic ciphers and protocols.</t>
            <t>The format of this registry is described in the
              <xref target="prim-alg-reg-intro">Introduction</xref> section above.</t>
            <t>Following is the initial assignment for this sub-registry:
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(init-hash-algs.txt)
]]></artwork>
              </figure>
            </t>
          </section>
        </section>

        <section title="IANA-maintained YANG Modules" anchor="iana-modules">
          <t>FIXME: this section needs elaboration!</t>
          <t>
            <list style="empty">
              <t>Any time one of the "Primitive" registries defined in
                <xref target="iana-prims"/> is modified, IANA must:
                <list style="empty">
                  <t>Run the TBD script defined in TBD to generate the corresponding
                    YANG module.</t>
                  <t>Publish the corresponding YANG module using the TBD process.</t>
                </list>
              </t>
            </list>
          </t>
          <t>Sample resulting YANG modules are provided in <xref target="sample-iana-modules"/>.</t>
        </section>

        <section title='Update the "Secure Shell (SSH) Protocol Parameters" Registry'>
          <t>This section updates the "Secure Shell (SSH) Protocol Parameters" registry
            located at https://www.iana.org/assignments/ssh-parameters/ssh-parameters.xhtml,
            following the guidelines specified in Section 5.2 in <xref target="RFC5226"/>.</t>
          <t>The Secure Shell (SSH) Protocol Parameters registry is composed of a
            number of sub-registries.  The update described in this section modifies
            only a subset of the sub-registries, as described in the subsections contained herein.</t>
          <t>The modification includes both adding a new column to the sub-registry
            and initialing the new column's values for existing registrations.</t>
          <t>The process to add the new column is the same for each subregistry and
            hence described only once here below.</t>
          <t>How to initialize the new column's values for existing registrations
            is specific to each subregistry and hence specified in the subsections.</t>
          <section title="Common Update to Specified Sub-Registries">
            <t>Add a new column called "Primitives" placed at the left-most position
              in the table.</t>
            <t>This column must contain one or more primitive algorithms used by the
              given registration.</t>
            <t>Each primitive algorithm must be listed in the "Cryptographic Primitives"
              registry defined in <xref target="iana-prims"/>.</t>
            <t>While unbounded, the number of primitive algorithms listed is never
              expected to be more than a few.</t>
          </section>
          <section title='The "Public Key Algorithm Names" Sub-Registry'>
            <t>
              <figure>
                <artwork>
Public Key Algorithm Name     Primitives
=========================     ==========
ssh-dss                       dss, sha1
ssh-rsa                       rsa, sha1
rsa-sha2-256                  rsa, sha-256
rsa-sha2-512                  rsa,
spki-sign-rsa                 rsa
spki-sign-dss                 dss
pgp-sign-rsa                  rsa
pgp-sign-dss                  dss
null                          N/A
ecdsa-sha2-*                  
x509v3-ssh-dss                dss
x509v3-ssh-rsa                rsa
x509v3-rsa2048-sha256         rsa
x509v3-ecdsa-sha2-*           
ssh-ed25519                   x25519
ssh-ed448                     x448
                </artwork>
              </figure>
            </t>
          </section>
        </section>

        <section title='Update the "Transport Layer Security (TLS) Parameters" Registry'>
          <t>This section updates the "Update the "Transport Layer Security (TLS) Parameters" registry
            located at https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml,
            following the guidelines specified in Section 5.2 in <xref target="RFC5226"/>.</t>
          <t>The Update the "Transport Layer Security (TLS) Parameters registry is composed of a
            number of sub-registries.  The update described in this section modifies
            only a subset of the sub-registries, as described in the subsections contained herein.</t>
          <t>The modification includes both adding a new column to the sub-registry
            and initialing the new column's values for existing registrations.</t>
          <t>The process to add the new column is the same for each subregistry and
            hence described only once here below.</t>
          <t>How to initialize the new column's values for existing registrations
            is specific to each subregistry and hence specified in the subsections.</t>
          <section title="Common Update to Specified Sub-Registries">
            <t>Add a new column called "Primitives" placed at the left-most position
              in the table.</t>
            <t>This column must contain one or more primitive algorithms used by the
              given registration.</t>
            <t>Each primitive algorithm must be listed in the "Cryptographic Primitives"
              registry defined in <xref target="iana-prims"/>.</t>
            <t>While unbounded, the number of primitive algorithms listed is never
              expected to be more than a few.</t>
          </section>
          <section title='The "TLS Supported Groups" Sub-Registry'>
            <t>Any unspecified row should have the Primitive value "N/A".</t>
            <t>
              <figure>
                <artwork>
Value   Description             Primitives
=====   ===========             ==========
1       sect163k1               FIXME
2       sect163r1               FIXME?
3       sect163r2               FIXME?
4       sect193r1               FIXME?
5       sect193r2               FIXME?
6       sect233k1               FIXME?
7       sect233r1               FIXME?
8       sect239k1               FIXME?
9       sect283k1               FIXME?
10      sect283r1               FIXME?
11      sect409k1               FIXME?
12      sect409r1               FIXME?
13      sect571k1               FIXME?
14      sect571r1               FIXME?
15      secp160k1               FIXME?
16      secp160r1               FIXME?
17      secp160r2               FIXME?
18      secp192k1               FIXME?
19      secp192r1               secp192r1
20      secp224k1               FIXME?
21      secp224r1               secp224r1
22      secp256k1               FIXME?
23      secp256r1               secp256r1
24      secp384r1               secp384r1
25      secp521r1               secp521r1
26      brainpoolP256r1         FIXME?
27      brainpoolP384r1         FIXME?
28      brainpoolP512r1         FIXME?
29      x25519                  x25519
30      x448                    x448
31      brainpoolP256r1tls13    FIXME?
32      brainpoolP384r1tls13    FIXME?
33      brainpoolP512r1tls13    FIXME?
256     ffdhe2048               FIXME?
257     ffdhe3072               FIXME?
258     ffdhe4096               FIXME?
259     ffdhe6144               FIXME?
260     ffdhe8192               FIXME?
                </artwork>
              </figure>
            </t>
          </section>
          <section title='The "TLS SignatureAlgorithm" Sub-Registry'>
            <t>Any unspecified row should have the Primitive value "N/A".</t>
            <t>
              <figure>
                <artwork>
Value   Description             Primitives
=====   ===========             ==========
0       anonymous               FIXME?
1       rsa                     rsa
2       dsa                     dsa
3       ecdsa                   FIXME?
7       ed25519                 x25519
8       ed448                   x448
                </artwork>
              </figure>
            </t>
          </section>
          <section title='The "TLS SignatureScheme" Sub-Registry'>
            <t>Any unspecified row should have the Primitive value "N/A".</t>
            <t>
              <figure>
                <artwork>
Value    Description                          Primitives
=====    ===========                          ==========
0x0201   rsa_pkcs1_sha1                       rsa
0x0203   ecdsa_sha1                           dsa
0x0401   rsa_pkcs1_sha256                     rsa
0x0403   ecdsa_secp256r1_sha256               secp256r1
0x0501   rsa_pkcs1_sha384                     rsa
0x0503   ecdsa_secp384r1_sha384               secp384r1
0x0601   rsa_pkcs1_sha512                     rsa
0x0603   ecdsa_secp521r1_sha512               secp521r1
0x0804   rsa_pss_rsae_sha256                  rsa
0x0805   rsa_pss_rsae_sha384                  rsa
0x0806   rsa_pss_rsae_sha512                  rsa
0x0807   ed25519                              x25519
0x0808   ed448                                x448
0x0809   rsa_pss_pss_sha256                   rsa
0x080A   rsa_pss_pss_sha384                   rsa
0x080B   rsa_pss_pss_sha512                   rsa
0x081A   ecdsa_brainpoolP256r1tls13_sha256    dsa
0x081B   ecdsa_brainpoolP384r1tls13_sha384    dsa
0x081C   ecdsa_brainpoolP512r1tls13_sha512    dsa
                </artwork>
              </figure>
            </t>
          </section>
        </section>

        <section title='Update the "IETF XML" Registry'>
          <t>This document registers four URIs in the "ns" subregistry
          of the "IETF XML" registry <xref target="RFC3688"/>.  Following
          the format in <xref target="RFC3688"/>, the following
          registrations are requested:</t>
          <t>
            <figure>
              <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-crypto-types
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:iana-symmetric-algs
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:iana-ssymmetric-algs
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:iana-hash-algs
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.</artwork>
            </figure>
          </t>
        </section>
        <section title='Update the "YANG Module Names" Registry'>
          <t>This document registers four YANG modules in the
          "YANG Module Names" registry <xref target="RFC6020"/>.
          Following the format in <xref target="RFC6020"/>, the
          the following registrations are requested:</t>
          <t>
            <figure>
              <artwork>
   name:         ietf-crypto-types
   namespace:    urn:ietf:params:xml:ns:yang:ietf-crypto-types
   prefix:       ct
   reference:    RFC XXXX

   name:         iana-symmetric-algs
   namespace:    urn:ietf:params:xml:ns:yang:iana-symmetric-algs
   prefix:       isa
   reference:    RFC XXXX

   name:         iana-asymmetric-algs
   namespace:    urn:ietf:params:xml:ns:yang:iana-asymmetric-algs
   prefix:       iasa
   reference:    RFC XXXX

   name:         iana-hash-algs
   namespace:    urn:ietf:params:xml:ns:yang:iana-hash-algs
   prefix:       iha
   reference:    RFC XXXX</artwork>
            </figure>
          </t>
        </section>
      </section>
    </middle>
    <back>
      <references title="Normative References">
        <?rfc include="reference.RFC.2119.xml"?>
        <!--<?rfc include="reference.RFC.2404.xml"?>-->
        <?rfc include="reference.RFC.3447.xml"?>
        <!--<?rfc include="reference.RFC.3565.xml"?>
        <?rfc include="reference.RFC.3686.xml"?>
        <?rfc include="reference.RFC.4106.xml"?>-->
        <?rfc include="reference.RFC.4253.xml"?>
        <!--<?rfc include="reference.RFC.4279.xml"?>
        <?rfc include="reference.RFC.4309.xml"?>
        <?rfc include="reference.RFC.4494.xml"?>
        <?rfc include="reference.RFC.4543.xml"?>
        <?rfc include="reference.RFC.4868.xml"?>-->
        <?rfc include="reference.RFC.5280.xml"?>
        <?rfc include="reference.RFC.5652.xml"?>
        <!--<?rfc include="reference.RFC.5656.xml"?>-->
        <?rfc include="reference.RFC.5958.xml"?>
        <?rfc include="reference.RFC.6031.xml"?>
        <!--<?rfc include="reference.RFC.6187.xml"?>-->
        <?rfc include="reference.RFC.6991.xml"?>
        <!--<?rfc include="reference.RFC.7919.xml"?>-->
        <?rfc include="reference.RFC.7950.xml"?>
        <?rfc include="reference.RFC.8174.xml"?>
        <!--<?rfc include="reference.RFC.8268.xml"?>
        <?rfc include="reference.RFC.8332.xml"?>-->
        <?rfc include="reference.RFC.8341.xml"?>
        <!--<?rfc include="reference.RFC.8422.xml"?>
        <?rfc include="reference.RFC.8446.xml"?>-->

        <!-- THE FOLLOWING LINE DOESN'T RESOLVE BECAUSE _reference.ITU.X744.1996.xml
             DOES NOT EXIST HERE: http://xml2rfc.tools.ietf.org/public/rfc/bibxml2/
             <?rfc include="reference.ITU.X690.2015.xml"?> -->
        <reference anchor="ITU.X690.2015" target="https://www.itu.int/rec/T-REC-X.690/">
          <front>
            <title>Information Technology - ASN.1 encoding rules: Specification of Basic
            Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished
            Encoding Rules (DER)</title>
            <author>
              <organization>International Telecommunication Union</organization>
            </author>
            <date month="August" year="2015"/>
          </front>
          <seriesInfo name="ITU-T Recommendation X.690," value="ISO/IEC 8825-1"/>
	    </reference>
      </references>
      <references title="Informative References">
        <?rfc include="reference.RFC.2986.xml"?>
        <!--<?rfc include="reference.RFC.3174.xml"?>-->
        <?rfc include="reference.RFC.3688.xml"?>
        <?rfc include="reference.RFC.4211.xml"?>
        <!--<?rfc include="reference.RFC.4493.xml"?>-->
        <?rfc include="reference.RFC.5056.xml"?>
        <?rfc include="reference.RFC.5226.xml"?>
        <?rfc include="reference.RFC.5915.xml"?>
        <?rfc include="reference.RFC.6020.xml"?>
        <?rfc include="reference.RFC.6125.xml"?>
        <!--<?rfc include="reference.RFC.6234.xml"?>-->
        <?rfc include="reference.RFC.6241.xml"?>
        <!--<?rfc include="reference.RFC.6239.xml"?>
        <?rfc include="reference.RFC.6507.xml"?>
        <?rfc include="reference.RFC.8017.xml"?>
        <?rfc include="reference.RFC.8032.xml"?>-->
        <?rfc include="reference.RFC.8040.xml"?>
        <?rfc include="reference.RFC.8340.xml"?>
        <!--<?rfc include="reference.RFC.8439.xml"?>-->
      </references>

      <section title="Sample IANA Modules" anchor="sample-iana-modules">

        <t>This non-normative section presents the YANG modules produced by
          running the TBD script presented in <xref target="iana-modules"/>
          over the registries defined in <xref target="iana-prims"/>.</t>

        <section title="The Symmetric Algorithms Module" anchor="symmetric-algs-yang-module">
          <t>
            <figure>
            <preamble>&lt;CODE BEGINS&gt; file "iana-symmetric-algs@YYYY-MM-DD.yang"</preamble>
             <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-symmetric-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>

        <section title="The Asymmetric Algorithms Module" anchor="asymmetric-algs-yang-module">
          <t>
            <figure>
            <preamble>&lt;CODE BEGINS&gt; file "iana-asymmetric-algs@YYYY-MM-DD.yang"</preamble>
             <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-asymmetric-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>

        <section title="The Hash Algorithms Module" anchor="hash-algs-yang-module">
          <t>
            <figure>
            <preamble>&lt;CODE BEGINS&gt; file "iana-hash-algs@YYYY-MM-DD.yang"</preamble>
             <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(iana-hash-algs@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>
      </section>

      <section title="Change Log">
        <section title="I-D to 00">
          <t>
            <list style="symbols">
              <t>Removed groupings and notifications.</t>
              <t>Added typedefs for identityrefs.</t>
              <t>Added typedefs for other RFC 5280 structures.</t>
              <t>Added typedefs for other RFC 5652 structures.</t>
              <t>Added convenience typedefs for RFC 4253, RFC 5280, and RFC 5652.</t>
            </list>
          </t>
        </section>
        <section title="00 to 01">
          <t>
            <list style="symbols">
              <t>Moved groupings from the draft-ietf-netconf-keystore here.</t>
            </list>
          </t>
        </section>
        <section title="01 to 02">
          <t>
            <list style="symbols">
              <t>Removed unwanted "mandatory" and "must" statements.</t>
              <t>Added many new crypto algorithms (thanks Haiguang!)</t>
              <t>Clarified in asymmetric-key-pair-with-certs-grouping,
                 in certificates/certificate/name/description, that 
                 if the name MUST NOT match the name of a certificate
                 that exists independently in &lt;operational&gt;, enabling
                 certs installed by the manufacturer (e.g., an IDevID).</t>
            </list>
          </t>
        </section>
        <section title="02 to 03">
          <t>
            <list style="symbols">
              <t>renamed base identity 'asymmetric-key-encryption-algorithm' to 'asymmetric-key-algorithm'.</t>
              <t>added new 'asymmetric-key-algorithm' identities for secp192r1, secp224r1, secp256r1,
                 secp384r1, and secp521r1.</t>
               <t>removed 'mac-algorithm' identities for mac-aes-128-ccm, mac-aes-192-ccm, mac-aes-256-ccm,
                 mac-aes-128-gcm, mac-aes-192-gcm, mac-aes-256-gcm, and mac-chacha20-poly1305.</t>
               <t>for all -cbc and -ctr identities, renamed base identity 'symmetric-key-encryption-algorithm'
                 to 'encryption-algorithm'.</t>
               <t>for all -ccm and -gcm identities, renamed base identity 'symmetric-key-encryption-algorithm'
                 to 'encryption-and-mac-algorithm' and renamed the identity to remove the "enc-" prefix.</t>
               <t>for all the 'signature-algorithm' based identities, renamed from 'rsa-*' to 'rsassa-*'.</t>
               <t>removed all of the "x509v3-" prefixed 'signature-algorithm' based identities.</t>
               <t>added 'key-exchange-algorithm' based identities for 'rsaes-oaep' and 'rsaes-pkcs1-v1_5'.</t>
               <t>renamed typedef 'symmetric-key-encryption-algorithm-ref' to 'symmetric-key-algorithm-ref'.</t>
               <t>renamed typedef 'asymmetric-key-encryption-algorithm-ref' to 'asymmetric-key-algorithm-ref'.</t>
               <t>added typedef 'encryption-and-mac-algorithm-ref'.</t>
               <t>Updated copyright date, boilerplate template, affiliation, and folding algorithm.</t>
            </list>
          </t>
        </section>
        <section title="03 to 04">
          <t>
            <list style="symbols">
              <t>ran YANG module through formatter.</t>
            </list>
          </t>
        </section>
        <section title="04 to 05">
          <t>
            <list style="symbols">
              <t>fixed broken symlink causing reformatted YANG module to not show.</t>
            </list>
          </t>
        </section>
        <section title="05 to 06">
          <t>
            <list style="symbols">
              <t>Added NACM annotations.</t>
              <t>Updated Security Considerations section.</t>
              <t>Added 'asymmetric-key-pair-with-cert-grouping' grouping.</t>
              <t>Removed text from 'permanently-hidden' enum regarding
                such keys not being backed up or restored.</t>
              <t>Updated the boilerplate text in module-level "description"
                statement to match copyeditor convention.</t>
              <t>Added an explanation to the 'public-key-grouping' and
                'asymmetric-key-pair-grouping' statements as for why the
                nodes are not mandatory (e.g., because they may exist only
                in &lt;operational&gt;.</t>
              <t>Added 'must' expressions to the 'public-key-grouping' and
                'asymmetric-key-pair-grouping' statements ensuring sibling
                nodes are either all exist or do not all exist.</t>
              <t>Added an explanation to the 'permanently-hidden' that the
                value cannot be configured directly by clients and servers
                MUST fail any attempt to do so.</t>
              <t>Added 'trust-anchor-certs-grouping' and 'end-entity-certs-grouping'
                (the plural form of existing groupings).</t>
              <t>Now states that keys created in &lt;operational&gt; by the
                *-hidden-key actions are bound to the lifetime of the parent
                'config true' node, and that subsequent invocations of either
                action results in a failure.</t>
            </list>
          </t>
        </section>
        <section title="06 to 07">
          <t>
            <list style="symbols">
              <t>Added clarifications that implementations SHOULD assert that
                configured certificates contain the matching public key.</t>
              <t>Replaced the 'generate-hidden-key' and 'install-hidden-key' actions
                with special 'crypt-hash' -like input/output values.</t>
            </list>
          </t>
        </section>
        <section title="07 to 08">
          <t>
            <list style="symbols">
              <t>Removed the 'generate-key and 'hidden-key' features.</t>
              <t>Added grouping symmetric-key-grouping</t>
              <t>Modified 'asymmetric-key-pair-grouping' to have a 'choice'
                 statement for the keystone module to augment into, as well
                 as replacing the 'union' with leafs (having different NACM
                 settings.</t>
            </list>
          </t>
        </section>
        <section title="08 to 09">
          <t>
            <list style="symbols">
              <t>Converting algorithm from identities to enumerations.</t>
            </list>
          </t>
        </section>
        <section title="09 to 10">
          <t>
            <list style="symbols">
              <t>All of the below changes are to the algorithm enumerations defined in ietf-crypto-types.</t>
              <t>Add in support for key exchange over x.25519 and x.448 based on RFC 8418.</t>
              <t>Add in SHAKE-128, SHAKE-224, SHAKE-256, SHAKE-384 and SHAKE 512</t>
              <t>Revise/add in enum of signature algorithm for x25519 and x448</t>
              <t>Add in des3-cbc-sha1 for IPSec</t>
              <t>Add in sha1-des3-kd for IPSec</t>
              <t>Add in  definit for rc4-hmac and rc4-hmac-exp. These two algorithms have been deprecated in RFC 8429. But some existing draft in i2nsf may still want to use them.</t>
              <t>Add x25519 and x448 curve for asymmetric algorithms</t>
              <t>Add signature algorithms ed25519, ed25519-cts, ed25519ph</t>
              <t>add signature algorithms ed448, ed448ph</t>
              <t>Add in rsa-sha2-256 and rsa-sha2-512 for SSH protocols (rfc8332)</t>
            </list>
          </t>
        </section>
        <section title="10 to 11">
          <t>
            <list style="symbols">
              <t>Added a "key-format" identity.</t>
              <t>Added symmetric keys to the example in <xref target="crypto-types-examples"/>.</t>
            </list>
          </t>
        </section>
        <section title="11 to 12">
          <t>
            <list style="symbols">
              <t>Removed all non-essential (to NC/RC) algorithm types.</t>
              <t>Moved remaining algorithm types each into its own module.</t>
              <t>Added a 'config false' "algorithms-supported" list to each of the algorithm-type modules.</t>
            </list>
          </t>
        </section>
        <section title="12 to 13">
          <t>
            <list style="symbols">
              <t>Added the four features: "[encrypted-]one-[a]symmetric-key-format", each protecting a 'key-format' identity of the same name.</t>
              <t>Added 'must' expressions asserting that the 'key-format' leaf exists whenever a non-hidden key is specified.</t>
              <t>Improved the 'description' statements and added 'reference' statements for the 'key-format' identities.</t>
              <t>Added a questionable forward reference to "encrypted-*" leafs in a couple 'when' expressions.</t>
              <t>Did NOT move "config false" alg-supported lists to SSH/TLS drafts.</t>
            </list>
          </t>
        </section>
        <section title="13 to 14">
          <t>
            <list style="symbols">
              <t>Resolved the "FIXME: forward ref" issue by modulating 'must', 'when', and 'mandatory' expressions.</t>
              <t>Moved the 'generatesymmetric-key' and 'generate-asymmetric-key' actions from ietf-keystore to
                ietf-crypto-types, now as RPCs.</t>
              <t>Cleaned up various description statements and removed lingering FIXMEs.</t>
              <t>Converted the "iana-&lt;alg-type&gt;-algs" YANG modules to IANA registries with
                instructions for how to generate modules from the registries, whenever they may
                be updated.</t>
            </list>
          </t>
        </section>
      </section>

      <section title="Acknowledgements" numbered="no">
        <t>The authors would like to thank for following for
        lively discussions on list and in the halls (ordered
        by last name):
          Martin Bjorklund,
          Nick Hancock,
          Balázs Kovács,
          Juergen Schoenwaelder,
          Eric Voit,
          and Liang Xia.
       </t>
     </section>

   </back>
</rfc>
